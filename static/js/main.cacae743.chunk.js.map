{"version":3,"sources":["utils/GlobalStyles.ts","utils/apolloClient.ts","utils/theme.ts","components/Heading/Heading.tsx","components/Container/Container.tsx","components/Header/Header.tsx","components/TabsMenu/TabsMenu.styles.tsx","components/TabsMenu/TabsMenu.tsx","components/Layout/Layout.tsx","components/Table/Table.styles.tsx","components/Table/Table.tsx","containers/Block/Block.tsx","components/Link/Link.tsx","containers/Blocks/Blocks.tsx","utils/formatDate.ts","containers/Transactions/Transactions.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","apolloClient","ApolloClient","uri","cache","InMemoryCache","theme","present","colors","text","background","primary","secondary","muted","gray","grayLighter","grayDarker","highlight","white","breakpoints","space","Heading1","styled","Heading","attrs","props","as","fontSize","displayName","Heading4","Container","children","rest","maxWidth","p","mx","Header","mb","activeClassName","LinkSt","NavLink","css","TabsMenuSt","Flex","TabsMenu","links","flexDirection","map","link","exact","to","Layout","title","TableSt","table","TableWrapperSt","div","Table","thead","defaultProps","undefined","BLOCK_QUERY","gql","Block","id","match","params","data","useQuery","variables","height","Number","block","bitcoin","blocks","timestamp","time","medianTime","blockHash","blockSize","blockStrippedSize","blockVersion","blockWeight","chainwork","difficulty","transactionCount","Link","BLOCKS_QUERY","Blocks","limit","offset","type","formatDate","date","Date","d","year","getFullYear","month","String","getMonth","day","getDate","length","join","TRANSACTIONS_QUERY","Transactions","from","till","dateFormat","transactions","index","ReactDOM","render","StrictMode","client","path","component","GlobalStyles","document","getElementById"],"mappings":"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","file":"static/js/main.cacae743.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`;\n\nexport default GlobalStyle;\n","import { ApolloClient, InMemoryCache } from '@apollo/client';\n\nconst apolloClient = new ApolloClient({\n  uri: 'https://graphql.bitquery.io',\n  cache: new InMemoryCache({}),\n});\n\nexport default apolloClient;\n","import present from '@rebass/preset';\n\nexport const theme = {\n  ...present,\n  colors: {\n    text: '#000',\n    background: '#fff',\n    primary: '#07c',\n    secondary: '#30c',\n    muted: '#f6f6f9',\n    gray: '#dddddf',\n    grayLighter: '#e7e7e7',\n    grayDarker: '#b1b1b1',\n    highlight: 'hsla(205, 100%, 40%, 0.125)',\n    white: '#fff',\n  },\n  breakpoints: ['40em', '52em', '64em'], // 640px, 832px, 1024px\n  space: [0, 4, 8, 16, 32, 64, 128, 256, 512],\n};\n\nexport default theme;\n","import styled from 'styled-components';\nimport { Heading } from 'rebass/styled-components';\n\n/**\n * Export the headings we need\n */\nexport const Heading1 = styled(Heading).attrs((props) => ({\n  as: 'h1',\n  fontSize: [5, 6, 7],\n  ...props,\n}))``;\n\nHeading1.displayName = 'Heading1';\n\nexport const Heading2 = styled(Heading).attrs((props) => ({\n  as: 'h2',\n  fontSize: [4, 5, 6],\n  ...props,\n}))``;\n\nHeading2.displayName = 'Heading2';\n\nexport const Heading3 = styled(Heading).attrs((props) => ({\n  as: 'h3',\n  fontSize: [3, 4, 5],\n  ...props,\n}))``;\n\nHeading3.displayName = 'Heading3';\n\nexport const Heading4 = styled(Heading).attrs((props) => ({\n  as: 'h4',\n  fontSize: [3, 4, 5],\n  ...props,\n}))``;\n\nHeading4.displayName = 'Heading4';\n\nexport const Heading5 = styled(Heading).attrs((props) => ({\n  as: 'h5',\n  fontSize: [3, 4, 5],\n  ...props,\n}))``;\n\nHeading5.displayName = 'Heading5';\n","import React from 'react';\nimport { Box } from 'rebass/styled-components';\n\nfunction Container(props: { children: React.ReactNode }) {\n  const { children, ...rest } = props;\n\n  return (\n    <Box maxWidth={1280} p={3} mx=\"auto\" {...rest}>\n      {children}\n    </Box>\n  );\n}\n\nexport default Container;\n","import React from 'react';\nimport { Box } from 'rebass/styled-components';\nimport { Heading4 } from '../Heading/Heading';\n\nfunction Header() {\n  return (\n    <Box mb={4}>\n      <Heading4>Bitwala Code Challenge</Heading4>\n    </Box>\n  );\n}\n\nexport default Header;\n","import styled, { css } from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { Flex } from 'rebass';\n\nconst activeClassName = 'tabs-menu-link-active';\nexport const LinkSt = styled(NavLink).attrs({ activeClassName })`\n  padding: ${({ theme }) => `${theme.space[3]}px`};\n  margin-bottom: -1px;\n  border: 1px solid transparent;\n  text-decoration: none;\n\n  &.${activeClassName} {\n    color: ${({ theme }) => theme.colors.grayDarker};\n  }\n\n  ${({ theme }) => css`\n    @media (min-width: ${theme.breakpoints[0]}) {\n      &.${activeClassName} {\n        border: 1px solid ${theme.colors.gray};\n        border-bottom: 1px solid ${theme.colors.white};\n      }\n\n      &:hover,\n      &:focus {\n        border-top: 1px solid ${theme.colors.gray};\n        border-right: 1px solid ${theme.colors.gray};\n        border-left: 1px solid ${theme.colors.gray};\n      }\n    }\n  `}\n`;\n\nexport const TabsMenuSt = styled(Flex)`\n  ${({ theme }) => css`\n    @media (min-width: ${theme.breakpoints[0]}) {\n      border-bottom: 1px solid ${theme.colors.gray};\n    }\n  `}\n`;\n","import React from 'react';\nimport { LinkSt, TabsMenuSt } from './TabsMenu.styles';\n\ninterface linkProp {\n  text: string;\n  to: string;\n}\n\nfunction TabsMenu(props: { links: linkProp[] }) {\n  const { links } = props;\n\n  return (\n    <TabsMenuSt flexDirection={['column', 'row']}>\n      {links.map((link) => (\n        <LinkSt key={link.to} exact to={link.to}>\n          {link.text}\n        </LinkSt>\n      ))}\n    </TabsMenuSt>\n  );\n}\n\nexport default TabsMenu;\n","import React from 'react';\nimport { Box } from 'rebass/styled-components';\nimport { Heading1 } from '../Heading/Heading';\nimport Container from '../Container/Container';\nimport Header from '../Header/Header';\nimport TabsMenu from '../TabsMenu/TabsMenu';\n\nfunction Layout(props: { title: string; children: React.ReactNode }) {\n  const { title, children } = props;\n  const links = [\n    { text: 'Blocks', to: '/' },\n    { text: 'Transactions', to: '/transactions' },\n  ];\n\n  return (\n    <Container>\n      <Header />\n      <TabsMenu links={links} />\n      <Heading1>{title}</Heading1>\n      <Box>{children}</Box>\n    </Container>\n  );\n}\n\nexport default Layout;\n","import styled from 'styled-components';\n\nexport const TableSt = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n\n  td,\n  th {\n    padding: ${({ theme }) => `${theme.space[3]}px`};\n    border: 1px solid ${({ theme }) => theme.colors.gray};\n    text-align: left;\n  }\n\n  tbody tr:nth-of-type(odd) {\n    background-color: ${({ theme }) => theme.colors.grayLighter};\n  }\n`;\n\nexport const TableWrapperSt = styled.div`\n  overflow-x: scroll;\n`;\n","import React from 'react';\nimport { TableSt, TableWrapperSt } from './Table.styles';\n\nfunction Table(props: { children: React.ReactNode; thead?: React.ReactNode }) {\n  const { thead, children } = props;\n\n  return (\n    <TableWrapperSt>\n      <TableSt>\n        {thead && <thead>{thead}</thead>}\n        <tbody>{children}</tbody>\n      </TableSt>\n    </TableWrapperSt>\n  );\n}\n\nTable.defaultProps = {\n  thead: undefined,\n};\n\nexport default Table;\n","import React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport Layout from '../../components/Layout/Layout';\nimport Table from '../../components/Table/Table';\n\nconst BLOCK_QUERY = gql`\n  query($height: Int!) {\n    bitcoin(network: bitcoin) {\n      blocks(height: { is: $height }) {\n        timestamp {\n          time(format: \"%Y-%m-%d %H:%M:%S\")\n        }\n        medianTime {\n          time(format: \"%Y-%m-%d %H:%M:%S\")\n        }\n        blockHash\n        blockSize\n        blockStrippedSize\n        blockVersion\n        blockWeight\n        chainwork\n        difficulty\n        transactionCount\n      }\n    }\n  }\n`;\n\nfunction Block(props: { match: { params: { id: string } } }) {\n  const { match } = props;\n  const { params } = match;\n  const { id } = params;\n  const { data } = useQuery(BLOCK_QUERY, { variables: { height: Number(id) } });\n  const block = data?.bitcoin?.blocks[0] || {};\n\n  return (\n    <Layout title=\"Block attributes\">\n      <Table\n        thead={\n          <tr>\n            <th>Attribute</th>\n            <th>Value</th>\n          </tr>\n        }\n      >\n        <tr>\n          <td>timestamp</td>\n          <td>{block.timestamp?.time}</td>\n        </tr>\n        <tr>\n          <td>medianTime</td>\n          <td>{block.medianTime?.time}</td>\n        </tr>\n        <tr>\n          <td>blockHash</td>\n          <td>{block.blockHash}</td>\n        </tr>\n        <tr>\n          <td>blockSize</td>\n          <td>{block.blockSize}</td>\n        </tr>\n        <tr>\n          <td>blockStrippedSize</td>\n          <td>{block.blockStrippedSize}</td>\n        </tr>\n        <tr>\n          <td>blockVersion</td>\n          <td>{block.blockVersion}</td>\n        </tr>\n        <tr>\n          <td>blockWeight</td>\n          <td>{block.blockWeight}</td>\n        </tr>\n        <tr>\n          <td>chainwork</td>\n          <td>{block.chainwork}</td>\n        </tr>\n        <tr>\n          <td>difficulty</td>\n          <td>{block.difficulty}</td>\n        </tr>\n        <tr>\n          <td>transactionCount</td>\n          <td>{block.transactionCount}</td>\n        </tr>\n      </Table>\n    </Layout>\n  );\n}\n\nexport default Block;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nfunction Link(props) {\n  return <RouterLink {...props} />;\n}\n\nexport default Link;\n","import React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport Layout from '../../components/Layout/Layout';\nimport Table from '../../components/Table/Table';\nimport Link from '../../components/Link/Link';\n\nconst BLOCKS_QUERY = gql`\n  query BlocksQuery($limit: Int!, $offset: Int!) {\n    bitcoin(network: bitcoin) {\n      blocks(options: { desc: \"height\", limit: $limit, offset: $offset }) {\n        blockHash\n        height\n        timestamp {\n          time(format: \"%Y-%m-%d %H:%M:%S\")\n        }\n      }\n    }\n  }\n`;\n\nfunction Blocks() {\n  const { data } = useQuery(BLOCKS_QUERY, {\n    variables: { limit: 10, offset: 0, type: 'BLOCKS_QUERY' },\n  });\n\n  return (\n    <Layout title=\"Blocks\">\n      <Table\n        thead={\n          <tr>\n            <th>Hash</th>\n            <th>Height</th>\n            <th>Timestamp</th>\n          </tr>\n        }\n      >\n        {data?.bitcoin?.blocks?.map(({ blockHash, height, timestamp }) => (\n          <tr key={blockHash}>\n            <td>{blockHash}</td>\n            <td>\n              <Link to={`/blocks/${height}`}>{height}</Link>\n            </td>\n            <td>{timestamp.time}</td>\n          </tr>\n        ))}\n      </Table>\n    </Layout>\n  );\n}\n\nexport default Blocks;\n","function formatDate(date: Date = new Date()): string {\n  const d = new Date(date);\n  const year = d.getFullYear();\n  let month = String(d.getMonth() + 1);\n  let day = String(d.getDate());\n\n  if (month.length < 2) {\n    month = `0${month}`;\n  }\n\n  if (day.length < 2) {\n    day = `0${day}`;\n  }\n\n  return [year, month, day].join('-');\n}\n\nexport default formatDate;\n","import React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport Layout from '../../components/Layout/Layout';\nimport Table from '../../components/Table/Table';\nimport formatDate from '../../utils/formatDate';\n\nconst TRANSACTIONS_QUERY = gql`\n  query($limit: Int!, $offset: Int!, $from: ISO8601DateTime, $till: ISO8601DateTime) {\n    bitcoin(network: bitcoin) {\n      transactions(\n        options: { desc: [\"block.height\", \"index\"], limit: $limit, offset: $offset }\n        date: { since: $from, till: $till }\n      ) {\n        block {\n          timestamp {\n            time(format: \"%Y-%m-%d %H:%M:%S\")\n          }\n          height\n        }\n        index\n      }\n    }\n  }\n`;\n\nfunction Transactions() {\n  const { data } = useQuery(TRANSACTIONS_QUERY, {\n    variables: {\n      limit: 10,\n      offset: 0,\n      from: formatDate(),\n      till: null,\n      dateFormat: '%Y-%m-%d',\n    },\n  });\n\n  return (\n    <Layout title=\"Transactions\">\n      <Table\n        thead={\n          <tr>\n            <td>Timestamp</td>\n            <td>index</td>\n          </tr>\n        }\n      >\n        {data?.bitcoin?.transactions.map(({ block, index }) => (\n          <tr key={index}>\n            <td>{block.timestamp.time}</td>\n            <td>{index}</td>\n          </tr>\n        ))}\n      </Table>\n    </Layout>\n  );\n}\n\nexport default Transactions;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from '@apollo/client';\nimport { ThemeProvider } from 'styled-components';\n// HashRouter used to accommodate hosting on github page\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport GlobalStyles from './utils/GlobalStyles';\nimport apolloClient from './utils/apolloClient';\n// Creating a \"theme switch\" for the ThemeProvider\n// would allow us to make a custom dark and light theme\nimport theme from './utils/theme';\n\nimport Block from './containers/Block/Block';\nimport Blocks from './containers/Blocks/Blocks';\nimport Transactions from './containers/Transactions/Transactions';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <ApolloProvider client={apolloClient}>\n        <HashRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Blocks} />\n            <Route exact path=\"/transactions\" component={Transactions} />\n            <Route path=\"/blocks/:id\" component={Block} />\n          </Switch>\n          <GlobalStyles />\n        </HashRouter>\n      </ApolloProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}